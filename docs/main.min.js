(function() {
const buttonsColors = document.querySelectorAll('.colors__item-title');
const listColors = document.querySelector('.colors__list');
const closeColors = document.querySelector('.colors__item-close');

document.addEventListener('click', e => {
 for( let btn of buttonsColors) {
     if (btn.parentNode.classList.contains('colors__item--active') && e.target !== btn ) {
       btn.parentNode.classList.remove('colors__item--active')
     }
 }  

  for( let btn of buttonsColors) {
    if (e.target === btn) {
     btn.parentNode.classList.toggle('colors__item--active'); 
   }
  }
  
    if (e.target === closeColors) {
     btn.parentNode.classList.toggle('colors__item--active'); 
   }
});
}) ();

(function() {
const buttons = document.querySelectorAll('.team__name');
const list = document.querySelector('.team__list');
document.addEventListener('click', e => {
 for( let btn of buttons) {
     if (btn.parentNode.classList.contains('team__item--active') && e.target !== btn ) {
       btn.parentNode.classList.remove('team__item--active')
     }
 }  

  for( let btn of buttons) {
    if (e.target === btn) {
     btn.parentNode.classList.toggle('team__item--active'); 
   }
  }
});
}) ();

// const myForm = document.querySelector('#myForm');
// const send = document.querySelector('#send');

// send.addEventListener('click', event => {
//     event.preventDefault();

//     if (validateForm(myForm)) {
//         const data = {
//             name: myForm.elements.name.value,
//             phone: myForm.elements.phone.value,
//             email: myForm.elements.email.value,
//             comment: myForm.elements.comment.value,
//         };


//         const xhr = new XMLHttpRequest();
//         xhr.responseType = 'json';
//         xhr.open('POST', 'https://webdev-api.loftschool.com/sendmail');
//         xhr.setRequestHeader('content-type', 'application/json');
//         xhr.send(JSON.stringify(data));
//         xhr.addEventListener('load', () => {
//            if (xhr.response.status) {                    
//                console.log('ok');
//            }
//         });
//     }
// });

// function validateForm(form){
//     let valid = true;

//     if (!validateField(form.elements.name)) {
//         valid = false;
//     };    
//     if (!validateField(form.elements.phone)) {
//         valid = false;
//     };
//     if (!validateField(form.elements.email)) {
//         valid = false;
//     };
//     if (!validateField(form.elements.comment)) {
//         valid = false;
//     };

//     return valid;
// }

// function validateField(field) {
//     field.nextElementSibling.textContent = field.validationMessage;
//     return field.checkValidity();
// }
(function() {
let burger  = document.querySelector('.burger');
let overlay = document.querySelector('.burger-menu');
let closer = document.querySelector('.burger-menu__closer');

let links = document.querySelectorAll('.burger-menu__link');

links.forEach(function(element){
  element.addEventListener('click' , toggleMenu);
})

function toggleMenu(){
  burger.classList.toggle('burger--active');
  overlay.classList.toggle('burger-menu--active');
  closer.classList.toggle('closer');
}

burger.addEventListener('click' , toggleMenu);
}) ();
(function() {
/* ===========================================================
 * jquery-onepage-scroll.js v1.3.1
 * ===========================================================
 * Copyright 2013 Pete Rojwongsuriya.
 * http://www.thepetedesign.com
 *
 * Create an Apple-like website that let user scroll
 * one page at a time
 *
 * Credit: Eike Send for the awesome swipe event
 * https://github.com/peachananr/onepage-scroll
 *
 * License: GPL v3
 *
 * ========================================================== */

!function($){

  var defaults = {
    sectionContainer: "section",
    easing: "ease",
    animationTime: 1000,
    pagination: true,
    updateURL: false,
    keyboard: true,
    beforeMove: null,
    afterMove: null,
    loop: true,
    responsiveFallback: false,
    direction : 'vertical'
	};

	/*------------------------------------------------*/
	/*  Credit: Eike Send for the awesome swipe event */
	/*------------------------------------------------*/

	$.fn.swipeEvents = function() {
      return this.each(function() {

        var startX,
            startY,
            $this = $(this);

        $this.bind('touchstart', touchstart);

        function touchstart(event) {
          var touches = event.originalEvent.touches;
          if (touches && touches.length) {
            startX = touches[0].pageX;
            startY = touches[0].pageY;
            $this.bind('touchmove', touchmove);
          }
        }

        function touchmove(event) {
          var touches = event.originalEvent.touches;
          if (touches && touches.length) {
            var deltaX = startX - touches[0].pageX;
            var deltaY = startY - touches[0].pageY;

            if (deltaX >= 50) {
              $this.trigger("swipeLeft");
            }
            if (deltaX <= -50) {
              $this.trigger("swipeRight");
            }
            if (deltaY >= 50) {
              $this.trigger("swipeUp");
            }
            if (deltaY <= -50) {
              $this.trigger("swipeDown");
            }
            if (Math.abs(deltaX) >= 50 || Math.abs(deltaY) >= 50) {
              $this.unbind('touchmove', touchmove);
            }
          }
        }

      });
    };


  $.fn.onepage_scroll = function(options){
    var settings = $.extend({}, defaults, options),
        el = $(this),
        sections = $(settings.sectionContainer),
        total = sections.length,
        status = "off",
        topPos = 0,
        leftPos = 0,
        lastAnimation = 0,
        quietPeriod = 500,
        paginationList = "";

    $.fn.transformPage = function(settings, pos, index) {
      if (typeof settings.beforeMove == 'function') settings.beforeMove(index);

      // Just a simple edit that makes use of modernizr to detect an IE8 browser and changes the transform method into
    	// an top animate so IE8 users can also use this script.
    	if($('html').hasClass('ie8')){
        if (settings.direction == 'horizontal') {
          var toppos = (el.width()/100)*pos;
          $(this).animate({left: toppos+'px'},settings.animationTime);
        } else {
          var toppos = (el.height()/100)*pos;
          $(this).animate({top: toppos+'px'},settings.animationTime);
        }
    	} else{
    	  $(this).css({
    	    "-webkit-transform": ( settings.direction == 'horizontal' ) ? "translate3d(" + pos + "%, 0, 0)" : "translate3d(0, " + pos + "%, 0)",
         "-webkit-transition": "all " + settings.animationTime + "ms " + settings.easing,
         "-moz-transform": ( settings.direction == 'horizontal' ) ? "translate3d(" + pos + "%, 0, 0)" : "translate3d(0, " + pos + "%, 0)",
         "-moz-transition": "all " + settings.animationTime + "ms " + settings.easing,
         "-ms-transform": ( settings.direction == 'horizontal' ) ? "translate3d(" + pos + "%, 0, 0)" : "translate3d(0, " + pos + "%, 0)",
         "-ms-transition": "all " + settings.animationTime + "ms " + settings.easing,
         "transform": ( settings.direction == 'horizontal' ) ? "translate3d(" + pos + "%, 0, 0)" : "translate3d(0, " + pos + "%, 0)",
         "transition": "all " + settings.animationTime + "ms " + settings.easing
    	  });
    	}
      $(this).one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(e) {
        if (typeof settings.afterMove == 'function') settings.afterMove(index);
      });
    }

    $.fn.moveDown = function() {
      var el = $(this)
      index = $(settings.sectionContainer +".active").data("index");
      current = $(settings.sectionContainer + "[data-index='" + index + "']");
      next = $(settings.sectionContainer + "[data-index='" + (index + 1) + "']");
      if(next.length < 1) {
        if (settings.loop == true) {
          pos = 0;
          next = $(settings.sectionContainer + "[data-index='1']");
        } else {
          return
        }

      }else {
        pos = (index * 100) * -1;
      }
      if (typeof settings.beforeMove == 'function') settings.beforeMove( next.data("index"));
      current.removeClass("active")
      next.addClass("active");
      if(settings.pagination == true) {
        $(".onepage-pagination li a" + "[data-index='" + index + "']").removeClass("active");
        $(".onepage-pagination li a" + "[data-index='" + next.data("index") + "']").addClass("active");
      }

      $("body")[0].className = $("body")[0].className.replace(/\bviewing-page-\d.*?\b/g, '');
      $("body").addClass("viewing-page-"+next.data("index"))

      if (history.replaceState && settings.updateURL == true) {
        var href = window.location.href.substr(0,window.location.href.indexOf('#')) + "#" + (index + 1);
        history.pushState( {}, document.title, href );
      }
      el.transformPage(settings, pos, next.data("index"));
    }

    $.fn.moveUp = function() {
      var el = $(this)
      index = $(settings.sectionContainer +".active").data("index");
      current = $(settings.sectionContainer + "[data-index='" + index + "']");
      next = $(settings.sectionContainer + "[data-index='" + (index - 1) + "']");

      if(next.length < 1) {
        if (settings.loop == true) {
          pos = ((total - 1) * 100) * -1;
          next = $(settings.sectionContainer + "[data-index='"+total+"']");
        }
        else {
          return
        }
      }else {
        pos = ((next.data("index") - 1) * 100) * -1;
      }
      if (typeof settings.beforeMove == 'function') settings.beforeMove(next.data("index"));
      current.removeClass("active")
      next.addClass("active")
      if(settings.pagination == true) {
        $(".onepage-pagination li a" + "[data-index='" + index + "']").removeClass("active");
        $(".onepage-pagination li a" + "[data-index='" + next.data("index") + "']").addClass("active");
      }
      $("body")[0].className = $("body")[0].className.replace(/\bviewing-page-\d.*?\b/g, '');
      $("body").addClass("viewing-page-"+next.data("index"))

      if (history.replaceState && settings.updateURL == true) {
        var href = window.location.href.substr(0,window.location.href.indexOf('#')) + "#" + (index - 1);
        history.pushState( {}, document.title, href );
      }
      el.transformPage(settings, pos, next.data("index"));
    }

    $.fn.moveTo = function(page_index) {
      current = $(settings.sectionContainer + ".active")
      next = $(settings.sectionContainer + "[data-index='" + (page_index) + "']");
      if(next.length > 0) {
        if (typeof settings.beforeMove == 'function') settings.beforeMove(next.data("index"));
        current.removeClass("active")
        next.addClass("active")
        $(".onepage-pagination li a" + ".active").removeClass("active");
        $(".onepage-pagination li a" + "[data-index='" + (page_index) + "']").addClass("active");
        $("body")[0].className = $("body")[0].className.replace(/\bviewing-page-\d.*?\b/g, '');
        $("body").addClass("viewing-page-"+next.data("index"))

        pos = ((page_index - 1) * 100) * -1;

        if (history.replaceState && settings.updateURL == true) {
            var href = window.location.href.substr(0,window.location.href.indexOf('#')) + "#" + (page_index - 1);
            history.pushState( {}, document.title, href );
        }
        el.transformPage(settings, pos, page_index);
      }
    }

    function responsive() {
      //start modification
      var valForTest = false;
      var typeOfRF = typeof settings.responsiveFallback

      if(typeOfRF == "number"){
      	valForTest = $(window).width() < settings.responsiveFallback;
      }
      if(typeOfRF == "boolean"){
      	valForTest = settings.responsiveFallback;
      }
      if(typeOfRF == "function"){
      	valFunction = settings.responsiveFallback();
      	valForTest = valFunction;
      	typeOFv = typeof valForTest;
      	if(typeOFv == "number"){
      		valForTest = $(window).width() < valFunction;
      	}
      }

      //end modification
      if (valForTest) {
        $("body").addClass("disabled-onepage-scroll");
        $(document).unbind('mousewheel DOMMouseScroll MozMousePixelScroll');
        el.swipeEvents().unbind("swipeDown swipeUp");
      } else {
        if($("body").hasClass("disabled-onepage-scroll")) {
          $("body").removeClass("disabled-onepage-scroll");
          $("html, body, .wrapper").animate({ scrollTop: 0 }, "fast");
        }


        el.swipeEvents().bind("swipeDown",  function(event){
          if (!$("body").hasClass("disabled-onepage-scroll")) event.preventDefault();
          el.moveUp();
        }).bind("swipeUp", function(event){
          if (!$("body").hasClass("disabled-onepage-scroll")) event.preventDefault();
          el.moveDown();
        });

        $(document).bind('mousewheel DOMMouseScroll MozMousePixelScroll', function(event) {
          event.preventDefault();
          var delta = event.originalEvent.wheelDelta || -event.originalEvent.detail;
          init_scroll(event, delta);
        });
      }
    }


    function init_scroll(event, delta) {
        deltaOfInterest = delta;
        var timeNow = new Date().getTime();
        // Cancel scroll if currently animating or within quiet period
        if(timeNow - lastAnimation < quietPeriod + settings.animationTime) {
            event.preventDefault();
            return;
        }

        if (deltaOfInterest < 0) {
          el.moveDown()
        } else {
          el.moveUp()
        }
        lastAnimation = timeNow;
    }

    // Prepare everything before binding wheel scroll

    el.addClass("onepage-wrapper").css("position","relative");
    $.each( sections, function(i) {
      $(this).css({
        position: "absolute",
        top: topPos + "%"
      }).addClass("section").attr("data-index", i+1);


      $(this).css({
        position: "absolute",
        left: ( settings.direction == 'horizontal' )
          ? leftPos + "%"
          : 0,
        top: ( settings.direction == 'vertical' || settings.direction != 'horizontal' )
          ? topPos + "%"
          : 0
      });

      if (settings.direction == 'horizontal')
        leftPos = leftPos + 100;
      else
        topPos = topPos + 100;


      if(settings.pagination == true) {
        paginationList += "<li><a data-index='"+(i+1)+"' href='#" + (i+1) + "'></a></li>"
      }
    });

    el.swipeEvents().bind("swipeDown",  function(event){
      if (!$("body").hasClass("disabled-onepage-scroll")) event.preventDefault();
      el.moveUp();
    }).bind("swipeUp", function(event){
      if (!$("body").hasClass("disabled-onepage-scroll")) event.preventDefault();
      el.moveDown();
    });

    // Create Pagination and Display Them
    if (settings.pagination == true) {
      if ($('ul.onepage-pagination').length < 1) $("<ul class='onepage-pagination'></ul>").prependTo("body");

      if( settings.direction == 'horizontal' ) {
        posLeft = (el.find(".onepage-pagination").width() / 2) * -1;
        el.find(".onepage-pagination").css("margin-left", posLeft);
      } else {
        posTop = (el.find(".onepage-pagination").height() / 2) * -1;
        el.find(".onepage-pagination").css("margin-top", posTop);
      }
      $('ul.onepage-pagination').html(paginationList);
    }

    if(window.location.hash != "" && window.location.hash != "#1") {
      init_index =  window.location.hash.replace("#", "")

      if (parseInt(init_index) <= total && parseInt(init_index) > 0) {
        $(settings.sectionContainer + "[data-index='" + init_index + "']").addClass("active")
        $("body").addClass("viewing-page-"+ init_index)
        if(settings.pagination == true) $(".onepage-pagination li a" + "[data-index='" + init_index + "']").addClass("active");

        next = $(settings.sectionContainer + "[data-index='" + (init_index) + "']");
        if(next) {
          next.addClass("active")
          if(settings.pagination == true) $(".onepage-pagination li a" + "[data-index='" + (init_index) + "']").addClass("active");
          $("body")[0].className = $("body")[0].className.replace(/\bviewing-page-\d.*?\b/g, '');
          $("body").addClass("viewing-page-"+next.data("index"))
          if (history.replaceState && settings.updateURL == true) {
            var href = window.location.href.substr(0,window.location.href.indexOf('#')) + "#" + (init_index);
            history.pushState( {}, document.title, href );
          }
        }
        pos = ((init_index - 1) * 100) * -1;
        el.transformPage(settings, pos, init_index);
      } else {
        $(settings.sectionContainer + "[data-index='1']").addClass("active")
        $("body").addClass("viewing-page-1")
        if(settings.pagination == true) $(".onepage-pagination li a" + "[data-index='1']").addClass("active");
      }
    }else{
      $(settings.sectionContainer + "[data-index='1']").addClass("active")
      $("body").addClass("viewing-page-1")
      if(settings.pagination == true) $(".onepage-pagination li a" + "[data-index='1']").addClass("active");
    }

    if(settings.pagination == true)  {
      $(".onepage-pagination li a").click(function (){
        var page_index = $(this).data("index");
        el.moveTo(page_index);
      });
    }


    $(document).bind('mousewheel DOMMouseScroll MozMousePixelScroll', function(event) {
      event.preventDefault();
      var delta = event.originalEvent.wheelDelta || -event.originalEvent.detail;
      if(!$("body").hasClass("disabled-onepage-scroll")) init_scroll(event, delta);
    });


    if(settings.responsiveFallback != false) {
      $(window).resize(function() {
        responsive();
      });

      responsive();
    }

    if(settings.keyboard == true) {
      $(document).keydown(function(e) {
        var tag = e.target.tagName.toLowerCase();

        if (!$("body").hasClass("disabled-onepage-scroll")) {
          switch(e.which) {
            case 38:
              if (tag != 'input' && tag != 'textarea') el.moveUp()
            break;
            case 40:
              if (tag != 'input' && tag != 'textarea') el.moveDown()
            break;
            case 32: //spacebar
              if (tag != 'input' && tag != 'textarea') el.moveDown()
            break;
            case 33: //pageg up
              if (tag != 'input' && tag != 'textarea') el.moveUp()
            break;
            case 34: //page dwn
              if (tag != 'input' && tag != 'textarea') el.moveDown()
            break;
            case 36: //home
              el.moveTo(1);
            break;
            case 35: //end
              el.moveTo(total);
            break;
            default: return;
          }
        }

      });
    }
    return false;
  }


}(window.jQuery);


$(".main").onepage_scroll();
}) ();
(function() {
let myMap;

const init = () => {                                            // центр карты, настройки зума, отключить все кнопки
    myMap = new ymaps.Map('map', {
        center: [55.160028, 61.402590],
        zoom: 13,
        controls: []
    });

    const coords = [                                              // координаты собственных точек
        [55.152320, 61.388858],
        [55.169214, 61.387146],
        [55.163565, 61.414419],
        [55.176060, 61.397218]
    ];

    const myCollection = new ymaps.GeoObjectCollection({}, {      // настройки иконок коллекции
        draggable: false,
        iconLayout: 'default#image',
        iconImageHref: './images/symbol/marker.svg',
        iconImageSize: [58, 74],
        iconImageOffset: [0, 0]
    });

    coords.forEach(coord => {
        myCollection.add(new ymaps.Placemark(coord));             // перебрали и добавили координаты для своих точек
    });

    myMap.geoObjects.add(myCollection);                           // добавили свою коллекцию

    myMap.behaviors.disable('scrollZoom');                        // отключен зум колёсиком
}

ymaps.ready(init);
}) ();
(function() {
const validateFields = (form, fieldsArray) => {
  fieldsArray.forEach((field) => {
    field.removeClass("input-error");
    if (field.val() === "") {
      field.addClass("input-error");
    }
  });

  const errorFields = form.find(".input-error");

  return errorFields.length === 0;
};

$(".order__form").submit((e) => {
  e.preventDefault();

  const form = $(e.currentTarget);
  const name = form.find("[name='name']");
  const phone = form.find("[name='phone']");
  const comment = form.find("[name='comment']");
  const to = form.find("[name='to']");

  const modal = $("#modal");
  const content = modal.find(".modal__content");

  modal.removeClass("error-modal");

  const isValid = validateFields(form, [name, phone, comment, to]);

  if (isValid) {
    const request = $.ajax({
      url: "https://webdev-api.loftschool.com/sendmail",
      method: "post",
      data: {
        name: name.val(),
        phone: phone.val(),
        comment: comment.val(),
        to: to.val(),
      },
      error: (data) => {},
    });

    request.done((data) => {
      content.text(data.message);
    });

    request.fail((data) => {
      const message = data.responseJSON.message;
      content.text(message);
      modal.addClass("error-modal");
    });

    request.always(() => {
      $.fancybox.open({
        src: "#modal",
        type: "inline",
      });
    });
  }
});

$(".js-close-modal").click((e) => {
  e.preventDefault();
  console.log('klik');
  const form = $('.order__form');
  const name = form.find("[name='name']");
  const phone = form.find("[name='phone']");
  const comment = form.find("[name='comment']")

  comment.val('');
  name.val("")
  phone.val("")
  
  $.fancybox.close();
});
}) ();

// // function submitForm (oFormElement) {
// //     var xhr = new XMLHttpRequest();
// //     xhr.onload = function() {
// //         alert (xhr.responseText); 
// //     }
// //     xhr.open (oFormElement.method, oFormElement.action, true);
// //     xhr.send (new FormData (oFormElement));
// //     return false;
// // }

// // xhr.onreadystatechange = function() {
// //   if (this.readyState == 4 && this.status == 200) {
// //     var data = JSON.parse(this.responseText);
// //     console.log(data);
// //   }
// // };


// $(document).ready(() => {

//     $('.button').on('click', e => {

//         let block = $('.type__form:last-child');

//         let value = block.val();         // получить то, что вводят в текстовое поле 

//         console.log(value);

//         // let block = $('.radio:checked');
//         // let block = $('#select');
//         // let block = $('#file');         // имя файла с приставкой fakepath
//     })
// })
(function() {
// let player;
// const playerContainer = $('.player');


// let eventsInit = () => {
//     $('.player__start').click(e => {
//         e.preventDefault();

//         if (playerContainer.hasClass('paused')) {
//             player.pause();                              // по клику старт, если видео было на паузе
//         } else {
//             player.play();                               // по клику пауза, если видео проигрывалось
//         }
//     });

//     $('.player__playback').click(e => {                        // по клику на прокрутку перематываем видос
//         const bar = $(e.currentTarget);

//         const clickedPosition = e.originalEvent.layerX;
//         const newButtonPositionPercent = (clickedPosition / bar.width()) * 100;
//         const newPlaybackPositionSec = (player.getDuration() / 100) * newButtonPositionPercent;

//         $('.player__playback-button').css({
//             left: `${newButtonPositionPercent}%`
//         });

//         player.seekTo(newPlaybackPositionSec);
//     })
    
//     $('.player__volume').click(e => {
//         const volBar = $(e.currentTarget);

//         const clickedVol = e.originalEvent.layerX;
//         const newButtonPositionVolPercent = (clickedVol / volBar.width()) * 100;
//         const newVolPosition = clickedVol / volBar.width();

        
//         $('.player__volume-button').css({
//             left: `${newButtonPositionVolPercent}%`
//         });

//         player.volume(newVolPosition);      
//     });
    
//     $('.player__splash').click(e => {
//         player.play();
//     })

// };

// const formatTime = timeSec => {
//     const roundTime = Math.round(timeSec);

//     const minutes = addZero(Math.floor(roundTime / 60));
//     const seconds = addZero(roundTime - minutes * 60);

//     function addZero(num) {                                   // функция, чтобы на видосах короче 10 минут в начале был нолик
//         return num < 10 ? `0${num}`:num;
//     }

//     return `${minutes}:${seconds}`;                         // время возвращается в обычном формате
// };  

// const onPlayerReady = () => {
//     let interval;
//     const durationSec = player.getDuration();

//     $('.player__duration-estimate').text(formatTime(durationSec));

//     if (typeof interval != 'undefined') {
//         clearInterval(interval);
//     }

//     interval = setInterval(() => {
//         const completedSec = player.getCurrentTime();
//         const completedPercent = (completedSec / durationSec) * 100;

//         $('.player__playback-button').css({                     // полоска прокрутки двигается параллельно текущей точке видео
//             left: `${completedPercent}%` 
//         });

//         $('.player__duration-completed').text(formatTime(completedSec));
//     }, 1000);                                                   //  сколько секунд видоса прошло - столько и отобразилось
// };

// const onPlayerStateChange = event => {

//     // -1 (воспроизведение видео не начато)
//     // 0 (воспроизведение видео завершено)
//     // 1 (воспроизведение)
//     // 2 (пауза)
//     // 3 (буферизация)
//     // 5 (видео подают реплики).

//     switch (event.data) {
//         case 1:
//             playerContainer.addClass('active');
//             playerContainer.addClass('paused');
//             break;

//         case 2:
//             playerContainer.removeClass('active');
//             playerContainer.removeClass('paused');
//             break;
//     }
// }

// function onYouTubeIframeAPIReady() {
//     player = new YT.Player('yt-player', {
//         height: '405',
//         width: '660',
//         videoId: 'M7lc1UVf-VE',
//         events: {
//         'onReady': onPlayerReady,
//         'onStateChange': onPlayerStateChange
//         },
//         playerVars: {                                           // убираем стандартные элементы интерфейса, которые сделаем сами
//             controls: 0,
//             disablekb: 0,
//             showinfo: 0,
//             rel: 0,
//             autoplay: 0,
//             modestbranding: 0
//         }
//     });
// }

// eventsInit();


/// О господи, это же HTML5 решение!!!!111

const playerContainer = document.querySelector('.player');
const playerWrapper = document.querySelector('.player__content');
const video = document.querySelector('#myvideo');
const playerStart = document.querySelector('.player__start');
const playerPlayback = document.querySelector('.player__playback');
const progressBar = document.querySelector('.player__playback-line');
const playerVideoCircle = document.querySelector('.player__playback-button');
const playerVolumeIcon = document.querySelector('.player__volume-svg');
const playerVolumeBar = document.querySelector('.player__volume');
const playerVolumeCirlce = document.querySelector('.player__volume-button');
let startVolume = 0;
let currentVolume;

/// запуск

const handleStart = () => {
    video.paused ? video.play() : video.pause();
    // if(video.paused) {
    //     video.play();
    // } else {
    //     video.pause();
    // }
}

playerStart.addEventListener('click', handleStart);
playerWrapper.addEventListener('click', handleStart);


/// play/pause

video.onplay = () => {
    togglePlayer();
}

video.onpause = () => {
    togglePlayer('pause');
}

const togglePlayer = ( action = 'start') => {
    action === 'start' ? playerContainer.classList.add('player_active') : playerContainer.classList.remove('player_active');
}


/// изменение звука 

const changeVolume = (e) => {
    // const {currentTarget} = e;
    const currentTarget = e.currentTarget;
    const left = currentTarget.getBoundingClientRect().left;
    const soundBarWidth = parseInt(getComputedStyle(currentTarget).width);
    const newPosition = e.pageX - left;
    const percentValue = (newPosition / soundBarWidth) * 100;
    if (percentValue < 100) {
        video.volume = percentValue / 100;
        playerVolumeCirlce.style.left = `${percentValue}%`;
    }
}


const toggleSound = () => {
    playerVolumeIcon.classList.toggle('muted');

    if(video.volume === 0) {
    video.volume = currentVolume;
    playerVolumeCirlce.style.left = `${currentVolume * 100}%`;
    } else {
        currentVolume = video.volume;
        video.volume = startVolume;
        playerVolumeCirlce.style.left = `${startVolume}%`;
    }

    // muted video

    /// unmuted video
    
    
}

playerVolumeBar.addEventListener('click', changeVolume);
playerVolumeIcon.addEventListener('click', toggleSound);

const handleDuration = (e) => {
    const barSize = parseInt(getComputedStyle(playerPlayback).width);
    const cirlceWidth = parseInt(getComputedStyle(playerVideoCircle).width);
    // const {offsetX} = e;
    const offsetX = e.offsetX;
    const newSize = offsetX + cirlceWidth / 2;
    const newTime = (newSize * video.duration) / barSize;
    video.currentTime = newTime;
}

const updateTime = () => {
    let orangeBar = video.currentTime / video.duration;
    progressBar.style.width = `${orangeBar * 100}%`;

    if (video.ended) {
        video.currentTime = 0;
    }
}

playerPlayback.addEventListener('click', handleDuration);
video.addEventListener('timeupdate', updateTime);
}) ();
(function() {
const slider = $('.slider__list').bxSlider({
    pager: false,
    controls: false,
    speed: 750,
    easing: 'ease-in-out'
});

$('.slider__arrow--left').click(e => {
    e.preventDefault();
    slider.goToPrevSlide();
})

$('.slider__arrow--right').click(e => {
    e.preventDefault();
    slider.goToNextSlide()
});
}) ();
(function() {
const findBlockByAlias = (alias) => {
    return $('.review__item').filter((ndx, item) => {
        return $(item).attr('data-linked-with') == alias;
    });
}
$('.interactive-avatar__link').click(e => {
    e.preventDefault();
    
    const $this = $(e.currentTarget);
    const target = $this.attr('data-open');
    const itemToShow = findBlockByAlias(target);
    const curItem = $this.closest('.reviewers__item');

    itemToShow.addClass('active').siblings().removeClass('active');
    curItem.addClass("reviewers__item--active").siblings().removeClass('reviewers__item--active');
})
}) ();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
